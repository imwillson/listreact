{"version":3,"sources":["../../../react-tutorial/src/Table.js","../../../react-tutorial/src/Form.js","../../../react-tutorial/src/App.js","../../../react-tutorial/src/index.js"],"names":["TableHeader","react_default","a","createElement","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","_this$props","this","Table_TableHeader","Table_TableBody","Component","Form","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","_event$target","target","value","setState","defineProperty","submitForm","handleSubmit","state","initialState","_this$state","type","onChange","App","characters","filter","character","i","console","log","concat","toConsumableArray","className","src_Table","src_Form","ReactDOM","render","src_App","document","getElementById"],"mappings":"uOAEMA,EAAc,WAChB,OACIC,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,oBAMVC,EAAY,SAAAC,GACd,IAAMC,EAAOD,EAAME,cAAcC,IAAI,SAACC,EAAIC,GACtC,OACIT,EAAAC,EAAAC,cAAA,MAAIQ,IAAKD,GAELT,EAAAC,EAAAC,cAAA,UAAKM,EAAIG,MACTX,EAAAC,EAAAC,cAAA,UAAKM,EAAII,KACTZ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAQW,QAAS,kBAAMT,EAAMU,gBAAgBL,KAA7C,cAShB,OAAOT,EAAAC,EAAAC,cAAA,aAAQG,IAoBJU,mLAhBF,IAAAC,EAIsCC,KAAKb,MAAxCE,EAJHU,EAIGV,cAAeQ,EAJlBE,EAIkBF,gBAEvB,OACId,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAACgB,EAAD,MAEAlB,EAAAC,EAAAC,cAACiB,EAAD,CAAWb,cAAeA,EAAeQ,gBAAiBA,YAXpDM,oBCkCPC,cAhEX,SAAAA,EAAYjB,GAAO,IAAAkB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAN,KAAAI,IACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAAN,KAAAM,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAV,KAAMb,KAUVwB,aAAe,SAAAC,GAAS,IAAAC,EACGD,EAAME,OAArBpB,EADYmB,EACZnB,KAAMqB,EADMF,EACNE,MASdV,EAAKW,SAALV,OAAAW,EAAA,EAAAX,CAAA,GACKZ,EAAQqB,KAtBEV,EA8BnBa,WAAa,WACTb,EAAKlB,MAAMgC,aAAad,EAAKe,OAI7Bf,EAAKW,SAASX,EAAKgB,eAhCnBhB,EAAKgB,aAAe,CAChB3B,KAAM,GACNC,IAAK,IAGTU,EAAKe,MAAQf,EAAKgB,aARHhB,wEAsCV,IAAAiB,EACgBtB,KAAKoB,MAAlB1B,EADH4B,EACG5B,KAAKC,EADR2B,EACQ3B,IAEb,OACIZ,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACIsC,KAAK,OACL7B,KAAK,OACLqB,MAAOrB,EACP8B,SAAUxB,KAAKW,eACnB5B,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SACIsC,KAAK,OACL7B,KAAK,MACLqB,MAAOpB,EACP6B,SAAUxB,KAAKW,eACnB5B,EAAAC,EAAAC,cAAA,SACIsC,KAAK,SACLR,MAAM,SACNnB,QAASI,KAAKkB,qBA3Dff,aCwEJsB,6MAnEXL,MAAQ,CAqBJM,WAAY,MAGhB7B,gBAAkB,SAAAL,GAAS,IACfkC,EAAerB,EAAKe,MAApBM,WAERrB,EAAKW,SAAS,CACVU,WAAYA,EAAWC,OAAO,SAACC,EAAWC,GAEtC,OADAC,QAAQC,IAAIvC,EAAQ,cACbqC,IAAMrC,SASzB2B,aAAe,SAAAS,GAEXvB,EAAKW,SAAS,CAACU,WAAU,GAAAM,OAAA1B,OAAA2B,EAAA,EAAA3B,CAAMD,EAAKe,MAAMM,YAAjB,CAA6BE,+EAItD,OACI7C,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,aACXnD,EAAAC,EAAAC,cAACkD,EAAD,CAAO9C,cAAeW,KAAKoB,MAAMM,WAAY7B,gBAAiBG,KAAKH,kBACnEd,EAAAC,EAAAC,cAACmD,EAAD,CAAMjB,aAAcnB,KAAKmB,uBAnDvBhB,mBCElBkC,IAASC,OAAOvD,EAAAC,EAAAC,cAACsD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.15abc069.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nconst TableHeader = () => {\n    return (\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Job</th>\n            </tr>\n        </thead>\n    )\n}\n\nconst TableBody = props => {\n    const rows = props.characterData.map((row,index) => {\n        return (\n            <tr key={index}>\n                {/* {console.log(\"Row\"+index)} */}\n                <td>{row.name}</td>\n                <td>{row.job}</td>\n                <td> \n                    <button onClick={() => props.removeCharacter(index)}>Delete</button>\n                    {/* The onClick function must pass through a function that returns the \n                    removeCharacter() method, otherwise it will try to run automatically. */}\n                </td>\n            </tr>\n        \n        )\n    })\n\n    return <tbody>{rows}</tbody>\n}\n\n  class Table extends Component { \n    render() {\n        // const characterData = this.props.characterData\n        // const removeCharacter = this.props.removeCharacter\n\n        const { characterData, removeCharacter } = this.props\n\n        return(\n            <table> \n                <TableHeader />\n                {/* <TableBody characterArray={characterData}/>  */}\n                <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n           </table>\n        )    \n    }\n}\n  \nexport default Table","import React, { Component } from 'react'\n\nclass Form extends Component {\n    constructor(props) {\n        super(props)\n\n        this.initialState = {\n            name: '',\n            job: '',\n        }\n\n        this.state = this.initialState\n    }\n\n    handleChange = event => {\n        const { name, value} = event.target\n        // const name = event.target.name\n\n\n\n        // inputChangeHandler(event) {\n        //     this.setState({ [event.target.name]: event.target.value });\n        // }        \n        // As compared to usual approach to named each element separately like this.setState({ userName: e.target.value }); This will handle multiple elements of form as an array and no need to set each individual element\n        this.setState({\n            [name] : value,\n        })\n    }\n\n    \n    //attaches the \"database in App\" to the state in form\n    //passes \"form states\" as a character paramter into handleSubmit\n    //second line is used for resetting the state of this app back to blank! important\n    submitForm = () => {\n        this.props.handleSubmit(this.state)\n        \n        // console.log(this.state)\n       \n        this.setState(this.initialState)\n        \n    }\n    render() {\n        const { name,job } = this.state;\n\n        return (\n            <form>\n                <label>Name</label>\n                <input \n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={this.handleChange} />\n                <label>Job</label>\n                <input \n                    type=\"text\"\n                    name=\"job\"\n                    value={job}\n                    onChange={this.handleChange} />\n                <input \n                    type=\"button\" \n                    value=\"Submit\" \n                    onClick={this.submitForm} />\n            </form>\n        );\n    }\n}\n\nexport default Form;","import React, { Component } from 'react'\nimport Table from './Table'\nimport Form from './Form'\n\nclass App extends Component {\n    \n\n    state = {\n        // characters: [\n            \n        //     {\n        //         name: 'Charlie',\n        //         job: 'Janitor',\n        //     },\n        //     {\n        //         name: 'Mac',\n        //         job: 'Bouncer',\n        //     },\n        //     {\n        //         name: 'Dee',\n        //         job: 'Aspiring Actress',\n        //     },\n        //     {\n        //         name: 'Dennis',\n        //         job: 'Bartner',\n        //     },\n            \n        // ]\n        characters: [],\n    }\n    // index is a a parameter in the arrow function\n    removeCharacter = index => { \n        const { characters } = this.state\n\n        this.setState({\n            characters: characters.filter((character, i) => {\n                console.log(index + \" removoed \")\n                return i !== index \n\n    \n            }),\n        })\n\n        \n    }\n    // character is a parameter in the arrow fucntion\n    handleSubmit = character => {\n        //rest operator vs spread operator \n        this.setState({characters: [...this.state.characters, character]})\n    }\n \n    render() {\n        return (\n            <div className=\"container\">\n                <Table characterData={this.state.characters} removeCharacter={this.removeCharacter} />\n                <Form handleSubmit={this.handleSubmit}/>\n            </div>\n        )\n    }\n}\n\n// class TestApp extends Component {\n//     render() {\n//         return (\n//             <h1>Hello World Part2!</h1>\n//         )\n//     }\n// }\n\n\n\n    \n\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n// ReactDOM. render(<TestApp />, document.getElementById('root'))"],"sourceRoot":""}